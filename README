# SecureNoteTaking app

This application is intended for encrypted notes using AES. In the login window password should be provided as battery
percentage. The encrypted notes are locally saved on device (using shared preferences).
 

# Setup

Step 1. Add the maven repository in your settings.gradle under the section:

	dependencyResolutionManagement {
    		repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
   			 repositories {
      				maven { url 'https://jitpack.io' }
    			}
		}

Step 2. Add the dependency to your module:app build.gradle file:

	dependencies {
	         implementation 'com.github.Morika1:ReadMoreApp:Tag'
	}



# Usage
In usage you can set from the XML file the text, its color and size and the number of lines to show when view is collapsed.
From your activity you can set the text content. 

Activity:
	public class MainActivity extends AppCompatActivity {
	
	    private ReadMoreView main_LAY_textview;
	
	
	    @Override
	    protected void onCreate(Bundle savedInstanceState) {
	        super.onCreate(savedInstanceState);
	        setContentView(R.layout.activity_main);
	
	        main_LAY_textview = (ReadMoreView)findViewById(R.id.main_LAY_textview);
	        //main_LAY_textview.setText(""); you can set the text in running using this line
	
	    }
	  }

XML:

	  <?xml version="1.0" encoding="utf-8"?>
	  <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
	    xmlns:app="http://schemas.android.com/apk/res-auto"
	    xmlns:tools="http://schemas.android.com/tools"
	    android:layout_width="match_parent"
	    android:layout_height="match_parent"
	    tools:context=".MainActivity">
	
	    <com.example.readmorelib.ReadMoreView
	        android:id="@+id/main_LAY_textview"
	        android:layout_width="match_parent"
	        android:layout_height="match_parent"
	        app:text="This is our library. Its purpose is to have a text view which can expand and collapse according to the length of the text. You 		can modify the minimum lines to show when view is collapsed, the text along its size and color. If the text is shorter or at the same line 		length of the minimum length, the readMore will disappear. This library can be implemented in any view. You can also use the setText 			method from your activity to change the text while running. To do so, give the view an id and initiate the view using findViewById with 		your other view component."
	        app:textColor="@color/md_green_400" />
	
	  </RelativeLayout>


# Credits
